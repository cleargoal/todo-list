openapi: 3.0.0
info:
  title: Task Manager API
  version: 1.0.0
  description: API documentation for the Task Manager application

servers:
  - url: http://localhost:8008/api
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        email_verified_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Task:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        parent_id:
          type: integer
        status:
          type: string
          enum: [todo, done]
        priority:
          type: string
          enum: [low, midlow, mid, midhigh, high]
        title:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time

paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad request

  /login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        401:
          description: Unauthorized

  /logout:
    post:
      summary: Logout the authenticated user
      security:
        - bearerAuth: []
      responses:
        200:
          description: User logged out successfully
        401:
          description: Unauthorized

  /auth-user:
    get:
      summary: Get authenticated user details
      security:
        - bearerAuth: []
      responses:
        200:
          description: Authenticated user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized

  /tasks:
    get:
      summary: Get a list of tasks for the authenticated user
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized

    post:
      summary: Create a new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        201:
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Bad request
        401:
          description: Unauthorized

  /tasks/filtered:
    get:
      summary: Get a filtered list of tasks
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [pending, completed]
          description: Filter tasks by status
        - in: query
          name: priority
          schema:
            type: string
            enum: [low, midlow, mid, midhigh, high]
          description: Filter tasks by priority
      responses:
        200:
          description: Filtered list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized

  /tasks/sorted:
    get:
      summary: Get a sorted list of tasks
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: priority
          schema:
            type: string
            enum: [asc, desc]
          description: Sort tasks by priority
      responses:
        200:
          description: Sorted list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized

  /tasks/{task}:
    get:
      summary: Get task details
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: task
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized
        403:
          description: Forbidden

    patch:
      summary: Update a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: task
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        200:
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden

    delete:
      summary: Delete a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: task
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Task deleted successfully
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /tasks/done/{task}:
    patch:
      summary: Mark a task as done
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: task
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Task marked as done successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /tasks/tree/{task}:
    get:
      summary: Get task tree for a specific task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: task
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Task tree details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized
        403:
          description: Forbidden
